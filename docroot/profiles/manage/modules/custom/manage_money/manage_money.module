<?php
/**
 * @file
 * Code for the Money feature.
 */

include_once 'manage_money.features.inc';

/**
 * Implements hook_node_presave.
 */
function manage_money_node_presave($node) {
  if ($node->type == 'money') {
    $current_total = variable_get('current_total', 0);
    $money_nodes = node_load_multiple(array(), array('type' => 'money'));
    foreach ($money_nodes as $money_node) {
      if (strtotime($money_node->field_date['und'][0]['value']) < strtotime($node->field_date['und'][0]['value'])) {
        $current_total += $money_node->field_amount['und'][0]['amount'];
      }
    }

    $current_total += $node->field_amount['und'][0]['amount'];
    $current_total = number_format($current_total, 2, '.', '');

    if ($node->field_monthly['und'][0]['value'] == 1 && $node->is_new == TRUE) {
      $start_date = $node->field_date['und'][0]['value'];
      $end_date = $node->field_end_date['und'][0]['value'];

      $temp_date = $start_date;
      if (strtotime($temp_date) < strtotime($end_date)) {
        $temp_date = strtotime($temp_date);
        $days_in_next_month = date('t', strtotime("+28 days", $temp_date));
        $temp_date = date('Y-m-d h:i:s', strtotime("+$days_in_next_month days", $temp_date));

        $new_node = new stdClass();
        $new_node->title = $node->title;
        $new_node->type = $node->type;
        $new_node->status = 1;
        $new_node->uid = (isset($local_user->uid) && !empty($local_user->uid)?$local_user->uid:1);
        $new_node->language = 'und';

        $new_node->field_amount = $node->field_amount;
        $new_node->field_date = $node->field_date;
        $new_node->field_monthly = $node->field_monthly;
        $new_node->field_end_date = $node->field_end_date;
        $new_node->field_date['und'][0]['value'] = $temp_date;

        $new_node = node_submit($new_node);
        node_save($new_node);
      }
    }
  }
}

/**
 * Implements hook_menu().
 */
function manage_money_menu() {
  module_load_include('inc', 'system', 'system.admin');

  $items['admin/config/manage/money'] = array(
    'title' => 'Money Config',
    'description' => 'Manage the configurations of the money module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('manage_money_admin_form'),
    'access arguments' => array('access administration pages'),
  );

  return $items;
}

/**
 * Custom manage money admin form.
 */
function manage_money_admin_form($form, &$form_state) {
  if ( isset( $form_state['storage'] ) && $form_state['storage']['ask_confirm'] ) {
    $question = t( "Confirm Generate" );
    $path = 'admin/config/manage/money';
    $description = t( "Are you sure you want to do this? This will set all money content up until today to unpublished and update your current total by adding up the amounts from all of this content. This cannot be undone." );
    $yes = t( "Confirm" );
    $no = t( "Cancel" );
    return confirm_form($form, $question, $path, $description, $yes, $no);
  }
  else {
    $form = array();

    $current_total = variable_get('current_total');

    $form['current_total'] = array(
      '#type' => 'textfield',
      '#title' => 'Current Total',
      '#default_value' => $current_total,
    );

    $form['save'] = array(
      '#type' => 'submit',
      '#value' => 'Save',
    );

    $form['generate'] = array(
      '#type' => 'submit',
      '#value' => 'Generate',
    );

    return $form;
  }
}

/**
 * Submit function for manage_money_admin_form save.
 */
function manage_money_admin_form_submit($form, &$form_state) {
  if ($form_state['clicked_button']['#value'] == 'Save') {
    $current_total = $form_state['values']['current_total'];
    variable_set('current_total', $current_total);
    drupal_set_message('You current total has been saved!');
  }
  else if ($form_state['clicked_button']['#value'] == 'Generate') {
    $form_state['rebuild'] = TRUE;
    $form_state['storage']['ask_confirm'] = TRUE;
  }
  else if (isset( $form_state['values']['confirm'] ) && $form_state['values']['confirm'] ) {
    $today = date('Y-m-d');
    $current_total = variable_get('current_total');
    $money_nodes = node_load_multiple(array(), array('type' => 'money'));
    $data = array();
    foreach ($money_nodes as $money_node) {
      if (strtotime($money_node->field_date['und'][0]['value']) < strtotime($today)) {
        $data[] = array(
          'nid' => $money_node->nid,
          'amount' => $money_node->field_amount['und'][0]['amount'],
        );
      }
    }
    foreach ($data as $item) {
      $current_total += $item['amount'];
      $node = node_load($item['nid']);
      $node->status = 0;
      node_save($node);
    }

    variable_set('current_total', $current_total);

    drupal_set_message('You current total has been generated and saved!');
  }
}
